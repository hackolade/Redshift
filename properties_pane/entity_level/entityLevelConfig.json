/*
* Copyright © 2016-2019 by IntegrIT S.A. dba Hackolade.  All rights reserved.
*
* The copyright to the computer software herein is the property of IntegrIT S.A.
* The software may be used and/or copied only with the written permission of 
* IntegrIT S.A. or in accordance with the terms and conditions stipulated in 
* the agreement/contract under which the software has been supplied. 

In order to define custom properties for any object's properties pane, you may copy/paste from the following,
making sure that you maintain a proper JSON format.

			{
				"propertyName": "Simple text",
				"propertyKeyword": "simpletextProp",
				"propertyType": "text",
				"sampleGen": "&containerName|&entityName|&random|<value>"
			},
			{
				"propertyName": "Text area",
				"propertyKeyword": "textareaProp",
				"propertyTooltip": "Popup for multi-line text entry",
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Dropdown selection",
				"propertyKeyword": "dropdownProp",
				"propertyTooltip": "Select from list of options",
				"propertyType": "select",
				"options": [
					"Option 1",
					"Option 2",
					"Option 3",
					"Option 4"
				]
			},
			{
				"propertyName": "Numeric",
				"propertyKeyword": "numericProp",
				"propertyValidate": true,
				"propertyType": "numeric",
				"valueType": "number",
				"allowNegative": false,
				"sampleGen": "&containerName|&entityName|&random|<value>"
			},
			{
				"propertyName": "Checkbox",
				"propertyKeyword": "checkboxProp",
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Group",
				"propertyType": "group",
				"propertyKeyword": "grpProp",
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Simple Grp Text",
						"propertyKeyword": "simpleGrpText",
						"propertyTooltip": "",
						"propertyType": "text"
					},
					{
						"propertyName": "Group Number",
						"propertyKeyword": "grpNumber",
						"propertyType": "numeric",
						"valueType": "number",
						"allowNegative": false
					}
				]
			},
// “groupInput” can have the following states - 0 items, 1 item, and many items.
// “blockInput” has only 2 states - 0 items or 1 item. 
// This gives us an easy way to represent it as an object and not as an array internally which is beneficial for processing 
// and forward-engineering in particular.
			{
				"propertyName": "Block",
				"propertyType": "block",
				"propertyKeyword": "grpProp",
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Simple Grp Text",
						"propertyKeyword": "simpleGrpText",
						"propertyTooltip": "",
						"propertyType": "text"
					},
					{
						"propertyName": "Group Number",
						"propertyKeyword": "grpNumber",
						"propertyType": "numeric",
						"valueType": "number",
						"allowNegative": false
					}
				]
			},
			{
				"propertyName": "Field List",
				"propertyKeyword": "keyList",
				"propertyType": "fieldList",
				"template": "orderedList"
			}, 
			{
				"propertyName": "List with attribute",
				"propertyKeyword": "keyListOrder",
				"propertyType": "fieldList",
				"template": "orderedList",
				"attributeList": [
					"ascending",
					"descending"
				]
			}

*/
[
	{
		"lowerTab": "Details",
		"structure": [
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Table role",
				"propertyKeyword": "tableRole",
				"propertyTooltip": "Select from list of options",
				"propertyType": "select",
				"options": ["Dimension", "Fact", "Outrigger", "Staging"],
				"dependency": {
					"level": "model",
					"key": "modelingMethodology",
					"value": "Dimensional"
				}
			},
			{
				"propertyName": "Vault component",
				"propertyKeyword": "vaultComponent",
				"propertyTooltip": "Select from list of options",
				"propertyType": "select",
				"options": ["Hub", "Link", "Satellite", "Bridge", "Point in Time", "Reference"],
				"dependency": {
					"level": "model",
					"key": "modelingMethodology",
					"value": "Vault"
				}
			},
			{
				"propertyName": "Temporary",
				"propertyKeyword": "temporary",
				"propertyType": "checkbox",
				"propertyTooltip": "Creates a temporary table that is visible only within the current session. The table is automatically dropped at the end of the session in which it is created."
			},
			{
				"propertyName": "If not exists",
				"propertyKeyword": "ifNotExists",
				"propertyType": "checkbox",
				"propertyTooltip": "if the specified table already exists, the command should make no changes and return a message that the table exists, rather than terminating with an error. "
			},
			{
				"propertyName": "Backup",
				"propertyKeyword": "BACKUP",
				"propertyType": "checkbox",
				"propertyTooltip": "Specifies whether the table should be included in automated and manual cluster snapshots."
			},
			{
				"propertyName": "Distribution style",
				"propertyKeyword": "DISTSTYLE",
				"propertyTooltip": "keyword that defines the data distribution style for the whole table.  AUTO: Amazon Redshift assigns an optimal distribution style based on the table data. EVEN: The data in the table is spread evenly across the nodes in a cluster in a round-robin distribution. KEY: The data is distributed by the values in the distKey column. ALL: A copy of the entire table is distributed to every node. ",
				"propertyType": "select",
				"options": ["Auto", "Even", "Key", "All"]
			},
			{
				"propertyName": "Dist key",
				"propertyKeyword": "distKey",
				"propertyType": "group",
				"propertyTooltip": "Keyword that specifies that the column is the distribution key for the table.",
				"groupItemLimit": 1,
				"structure": [
					{
						"propertyName": "Key",
						"propertyKeyword": "compositeDistKey",
						"propertyType": "compositeKeySetter",
						"disabledItemStrategy": "default",
						"abbr": "dk",
						"setPrimaryKey": false,
						"template": "collectiontree",
						"isCompositeKey": true,
						"templateOptions": {
							"maxFields": 1
						}
					}
				]
			},
			{
				"propertyName": "Auto sort key",
				"propertyKeyword": "autoSortKey",
				"propertyType": "checkbox",
				"propertyTooltip": "If you don't specify any sort keys options, the default is AUTO."
			},
			{
				"propertyName": "Sort key",
				"propertyType": "group",
				"propertyKeyword": "sortKey",
				"groupItemLimit": 1,
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Key",
						"propertyKeyword": "compositeSortKey",
						"propertyType": "compositeKeySetter",
						"disabledItemStrategy": "default",
						"setPrimaryKey": false,
						"abbr": "sk",
						"attributeList": [],
						"template": "collectiontree",
						"isCompositeKey": true
					}
				],
				"dependency": {
					"type": "not",
					"values": {
						"key": "autoSortKey",
						"value": true
					}
				}
			},
			{
				"propertyName": "Sort style",
				"propertyKeyword": "sortStyle",
				"propertyTooltip": "from list of options",
				"propertyType": "select",
				"options": ["Compound", "Interleaved"],
				"dependency": {
					"type": "not",
					"values": {
						"key": "autoSortKey",
						"value": true
					}
				}
			},
			{
				"propertyName": "Like parent table",
				"propertyKeyword": "like",
				"propertyTooltip": "Specifies an existing table from which the new table automatically copies column names, data types, and NOT NULL constraints.",
				"propertyType": "selecthashed",
				"template": "entities",
				"withEmptyOption": true,
				"excludeCurrent": true
			},
			{
				"propertyName": "Include defaults",
				"propertyKeyword": "includeDefualts",
				"propertyType": "checkbox",
				"propertyTooltip": "Default expressions for the copied column definitions are copied only if INCLUDING DEFAULTS is specified. The default behavior is to exclude default expressions, so that all columns of the new table have null defaults.",
				"dependency": {
					"key": "like",
					"exist": true
				}
			},
			{
				"propertyName": "As Select statement",
				"propertyKeyword": "selectStatement",
				"propertyType": "details",
				"template": "textarea",
				"markdown": false
			},
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea",
				"valueType": "string"
			}
		],
		"columnsRatio": [3.7, 5]
	},
	{
		"lowerTab": "Compound keys",
		"structure": [
			{
				"propertyName": "Primary key",
				"propertyType": "group",
				"groupItemLimit": 1,
				"propertyKeyword": "primaryKey",
				"propertyTooltip": {
					"disabled": [
						{
							"tooltip": "Remove the existing single column primary key definition prior to unlock the possibility to create a composite primary key definition for this table",
							"dependency": {
								"type": "and",
								"values": [
									{
										"level": "children",
										"key": "primaryKey",
										"value": true
									},
									{
										"type": "not",
										"values": {
											"level": "children",
											"key": "compositePrimaryKey",
											"value": true
										}
									}
								]
							}
						},
						{
							"tooltip": "Remove or update the existing composite primary key definition prior to unlock the possibility to create a new composite primary key definition for this table",
							"dependency": {
								"key": "primaryKey",
								"minLength": 1
							}
						}
					]
				},
				"disabledOnCondition": [
					{
						"level": "children",
						"value": {
							"type": "and",
							"values": [
								{
									"key": "primaryKey",
									"value": true
								},
								{
									"type": "or",
									"values": [
										{
											"key": "compositePrimaryKey",
											"value": false
										},
										{
											"key": "compositePrimaryKey",
											"exist": false
										}
									]
								},
								{
									"type": "or",
									"values": [
										{
											"key": "compositeUniqueKey",
											"value": false
										},
										{
											"key": "compositeUniqueKey",
											"exist": false
										}
									]
								}
							]
						}
					}
				],
				"structure": [
					{
						"propertyName": "Key",
						"propertyKeyword": "compositePrimaryKey",
						"propertyType": "primaryKeySetter",
						"abbr": "pk",
						"attributeList": []
					}
				]
			},
			{
				"propertyName": "Unique key",
				"propertyType": "group",
				"groupItemLimit": 1,
				"propertyKeyword": "uniqueKey",
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Key",
						"propertyKeyword": "compositeUniqueKey",
						"propertyType": "compositeKeySetter",
						"disabledItemStrategy": "default",
						"setPrimaryKey": false,
						"abbr": " ",
						"attributeList": [],
						"template": "collectiontree",
						"isCompositeKey": true
					},
					{
						"propertyName": "Alternate key",
						"propertyKeyword": "alternateKey",
						"propertyTooltip": "",
						"propertyType": "checkbox",
						"setFieldPropertyBy": "compositeUniqueKey"
					}
				]
			}
		]
	}
]
